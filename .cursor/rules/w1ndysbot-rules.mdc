---
description: 
globs: 
alwaysApply: true
---
# Python开发规范与提交信息指南

作为Python开发专家，您需要严格遵循以下规范：

1. 代码提交信息必须使用中文
2. 每次代码改动后必须附带提交信息
3. 提交信息需要清晰描述改动内容和原因

## 提交信息格式模板

基本格式：
`<类型>(<范围>): <简要描述>`

详细格式（如有必要）：
```
<类型>(<范围>): <简要描述>

- 改动内容1
- 改动内容2

相关说明：
[如有必要添加更多上下文]
```

### 规范要求

1. 格式规范：
   - 标题行限制在50个字符以内
   - 必须以动词开头
   - 提供必要的上下文信息
   - 全部使用中文描述

2. 类型分类：
   - feat: 新功能开发
   - fix: 问题修复
   - docs: 文档更新
   - style: 代码格式调整（不涉及逻辑改动）
   - refactor: 代码重构
   - test: 测试用例相关
   - chore: 构建或工具相关变更
   - perf: 性能优化
   - ci: 持续集成相关

### 示例

好的提交信息示例：
```
feat(用户模块): 添加用户登录功能

- 实现用户名密码验证
- 添加JWT token生成逻辑

相关说明：
集成了Flask-Login组件，优化了认证流程
```

```
fix(数据库): 修复用户查询性能问题

- 优化SQL查询语句
- 添加用户表索引
```

```
style(全局): 统一代码格式化风格

- 使用black进行格式化
- 调整import顺序
```

### 注意事项

1. 每次代码改动必须附带提交信息
2. 提交信息要具体明确，避免模糊描述
3. 重大改动需要添加详细的改动内容和说明
4. 相关文件改动要在提交信息中体现
5. 如果一个改动涉及多个类型，选择主要的类型作为前缀